<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>奥赛笔记</title>
      <link href="/2022/08/16/ao-sai-bi-ji/"/>
      <url>/2022/08/16/ao-sai-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>讲的东西都蛮有意思的，我在记笔记的时候参考了 其他资料，不全是讲的内容，字写的有点草，凑合看👀</p><h2 id="整除"><a href="#整除" class="headerlink" title="整除"></a>整除</h2><p><img src="https://s2.loli.net/2022/08/16/HdPzLG9e8SYku2E.jpg" alt="整除"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS布局</title>
      <link href="/2022/07/10/css-bu-ju/"/>
      <url>/2022/07/10/css-bu-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="文档流（normal-flow）"><a href="#文档流（normal-flow）" class="headerlink" title="文档流（normal flow）"></a>文档流（normal flow）</h2><p>网页是一个多层的结构，一层摞者一层<br>通过CSS可以分别为每一层来设置样式<br>作为用户来讲只能看到最顶上一层<br>这些层中，最底下的一层称为文档流，文档流是网页的基础<br>我们所创建的元素默认都是在文档流中进行排列的</p><h3 id="元素的两种状态"><a href="#元素的两种状态" class="headerlink" title="元素的两种状态"></a>元素的两种状态</h3><h4 id="在文档流中"><a href="#在文档流中" class="headerlink" title="在文档流中"></a>在文档流中</h4><p>元素在文档流中的特点：</p><h5 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h5><p>块元素会在页面中独占一行<br>默认宽度是父元素的全部（会把父元素撑满）<br>默认高度是被内容撑开（子元素）</p><h5 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h5><p>行内元素不会独占页面的一行， 只占自身的大小<br>行内元素在页面中左向右水平排列，如果一行之中不能容纳下所有的行内元素<br>则元素会换到第二行继续从左向右排列（书写习惯一致）<br>行内元素的默认宽度和高度都是被内容撑开</p><h4 id="不在文档流中（脱离文档流）"><a href="#不在文档流中（脱离文档流）" class="headerlink" title="不在文档流中（脱离文档流）"></a>不在文档流中（脱离文档流）</h4><p>空</p><h2 id="盒子模型、盒模型、框模型（box-model）"><a href="#盒子模型、盒模型、框模型（box-model）" class="headerlink" title="盒子模型、盒模型、框模型（box model）"></a>盒子模型、盒模型、框模型（box model）</h2><p>CSS将页面中的所有元素都设置为了一个矩形的盒子<br>将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子摆放到不同的位置<br>每一个盒子都由一下几个部分组成：</p><p>内容区（content）</p><p>边框（border）</p><p>内边距（padding）</p><p>外边距（margin）</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 示例 */</span><span class="token selector">.box1</span><span class="token punctuation">&#123;</span>    <span class="token comment">/*    内容区    元素中的所有的子元素和文本内容都在内容区里面排列内容去的大小由width和height两个属性来设置 width 设置内容区的宽度 height 设置内容区的高度    */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #bfa<span class="token punctuation">;</span>        <span class="token comment">/*    边框属于盒子边缘，边框里边属于盒子内部，出了边框都是盒子的外部边框的大小会影响到整个盒子的大小    要设置边框，需要至少设置三个样式，        边框的宽度 border-width    默认值一般都是3个像素    可以用来指定四个方向的边框的宽度    值的情况    四个值： 上 下 左 右 （顺时针）    三个值： 上 左右 下 （左右对称）    两个值： 上下 左右 （上下左右都对称）    一个值： 上下左右 （上下左右一样）    例：    border-width: 10px 20px 30px 40px    除了border-width还有一组 border-xxx-width    xxx可以是 top right botton left用来单独指定某一个边的宽度        边框的颜色 border-color    用来指定边框的颜色，同样可以分别指定四个边的边框    规则和border-width一样    border-color也可以省略不写，如果省略了则自动使用color的颜色值    边框的样式 border-style    默认值是none 表示没有边框    指定边框的样式    solid 表示实线    dotted 点状虚线    sashed 虚线    double 双线    规则一样    */</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>        <span class="token comment">/*    border简写属性，通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求    除了border以外还有四个 border-xxx    */</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid 10px orange<span class="token punctuation">;</span><span class="token property">border-right</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment">/*    内边距（padding）    内容区和边框之间的距离是内边距    一共有四个方向的内边距    padding-xxx        内边距的设置会影响到盒子的大小    背景颜色会延伸到内边距上        显示内容区解决方案    添加大小为100%的子元素，设置另一个颜色        一个盒子的可见框的大小，由内容区 内边距 和边框共同决定，    所以在计算盒子大小时，需要将这三个区域加到一起计算        padding内边距的简写属性，可以同时指定四个方向的内边距    规则和 border-width 一样    */</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px 30px 40px<span class="token punctuation">;</span>        <span class="token comment">/*    外边距（margin）    外边距不会影响盒子可见框的大小    但是外边距会影响盒子的位置    一共有四个方向的外边距    margin-xxx    元素在页面中时按照自左向右的顺序排列的，    所以默认情况下如果我们设置的左和上外边距则会移动元素自身    而设置下和右外边距会移动其他元素    margin也可以设置负值，如果是负值则元素会向相反的方向移动4    margin的简写属性    同上    margin会影响到盒子实际占用空间    */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="盒子的水平布局"><a href="#盒子的水平布局" class="headerlink" title="盒子的水平布局"></a>盒子的水平布局</h2><p>元素在其父元素中水平方向的位置由以下几个属性共同决定</p><p>margin-left<br>border-left<br>padding-left<br>width<br>padding-right<br>border-right<br>margin-right</p><p>一个元素在其父元素中水平布局必须要满足一下的等式</p><p>margin-left + border-left + padding-left + width + padding-right + border-right+ margin-right &#x3D; 其父元素内容区的宽度（必须满足）</p><p>如果计算结果使等式不成立，则称为过度约束，则等式会自动调整<br>调整的情况：<br>如果这七个值中没有为auto的情况，则浏览器自动调整margin-right值以使等式满足</p><p>这七个值中有三个值可以设置为auto<br>width<br>margin-left<br>margin-right</p><p>如果某个值为auto，则会自动调整为auto的那个值以使等式成立</p><p>如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为0</p><p>如果将三个值都设置为auto，则外边距都是0，宽度最大</p><p>如果将两个外边距设置为auto，宽度固定值，则会将外边距设置为相同的值<br>所以我们经常利用这个特点来使一个元素在其父元素中水平居中<br>示例：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span>xxxpx<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="垂直方向的布局"><a href="#垂直方向的布局" class="headerlink" title="垂直方向的布局"></a>垂直方向的布局</h2><p>默认情况下父元素的高度被内容撑开</p><p>子元素是在父元素的内容区中排列的，<br>如果子元素的大小超过了父元素，则子元素会从父元素中溢出<br>使用overflow属性来设置父元素如何处理溢出的子元素</p><p>可选值：<br>visible，默认值 子元素会从父元素中溢出，在父元素外部的位置显示<br>hidden 溢出内容将会被裁剪不会显示<br>scroll 生成两个滚动条，通过滚动条来查看完整的内容<br>auto 根据需要生成滚动条</p><p>扩展<br>overflow-x: 水平方向<br>overflow-y: 竖直方向</p><h2 id="外边距的折叠（垂直）"><a href="#外边距的折叠（垂直）" class="headerlink" title="外边距的折叠（垂直）"></a>外边距的折叠（垂直）</h2><p>相邻的垂直方向外边距会发生重叠现象</p><h3 id="兄弟元素"><a href="#兄弟元素" class="headerlink" title="兄弟元素"></a>兄弟元素</h3><p>兄弟元素间的相邻垂直外边距会取两者之间的较大值<br>特殊情况：<br>如果相邻的外边距一正一负，则取两者的和<br>如果相邻的外边距都是负值，则取两者中绝对值较大的</p><p>兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理</p><h3 id="父子元素"><a href="#父子元素" class="headerlink" title="父子元素"></a>父子元素</h3><p>父子元素间的相邻外边距，子元素的会传递给父元素（上外边距）</p><p>父子外边距的折叠会影响到页面的布局，必须要进行处理</p><h2 id="行内元素的盒模型"><a href="#行内元素的盒模型" class="headerlink" title="行内元素的盒模型"></a>行内元素的盒模型</h2><p>行内元素不支持设置宽度和高度（由内容决定）</p><p>行内元素可以设置padding&#x2F;border&#x2F;margin，但是垂直方向不会影响页面的布局</p><p>（超链接也是行内元素）</p><h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><p>用来设置元素显示的类型<br>可选值：<br>inline 将元素设置为行内元素<br>block 将元素设置为块元素<br>inline-block 将元素设置为行内块元素<br> 行内块，即可以设置宽度和高度又不会独占一行<br>table 将元素设置为一个表格<br>none 元素不在页面中显示</p><h3 id="visibility"><a href="#visibility" class="headerlink" title="visibility"></a>visibility</h3><p>用来设置元素的显示状态<br>可选值：<br>visible 默认值，元素在页面中正常显示<br>hidden 元素在页面中隐藏 不显示，但是依然占据页面的位置</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经典人物素材-民国流芳</title>
      <link href="/2022/07/01/jing-dian-ren-wu-su-cai-min-guo-liu-fang/"/>
      <url>/2022/07/01/jing-dian-ren-wu-su-cai-min-guo-liu-fang/</url>
      
        <content type="html"><![CDATA[<h2 id="胡适"><a href="#胡适" class="headerlink" title="胡适"></a>胡适</h2><p><img src="https://s2.loli.net/2022/07/01/lQNXZtFGxoEb7p3.jpg" alt="胡适"></p><p>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础CSS笔记</title>
      <link href="/2022/06/30/ji-chu-css-bi-ji/"/>
      <url>/2022/06/30/ji-chu-css-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="使用CSS来修改元素的样式"><a href="#使用CSS来修改元素的样式" class="headerlink" title="使用CSS来修改元素的样式"></a>使用CSS来修改元素的样式</h2><h3 id="第一种方式（内联样式，行内样式）"><a href="#第一种方式（内联样式，行内样式）" class="headerlink" title="第一种方式（内联样式，行内样式）:"></a>第一种方式（内联样式，行内样式）:</h3><p>在标签内部通过style属性来设置元素的样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">&lt;p style=<span class="token string">"color: red; font-size: 60px;"</span>>少小离家老大回，乡音无改鬓毛衰&lt;/p><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>问题：<br>使用内联样式，样式只能对一个标签生效，<br>如果希望影响到多个元素必须在每一个元素中都复制一遍，<br>并且当样式发生变化时，我们必须要一个一个的修改，非常不方便</p><p><strong>注意：</strong>开发时绝对不要使用内联样式</p></blockquote><h3 id="第二种方式（内部样式表）"><a href="#第二种方式（内部样式表）" class="headerlink" title="第二种方式（内部样式表）"></a>第二种方式（内部样式表）</h3><p>将样式编写到head中的style标签里<br>然后通过CSS的选择器来选中元素并为其设置各种样式<br>可以同时为多个标签设置样式，并且修改时只需要修改一处即可全部应用</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>内部样式表更加方便对样式进行复用 </p><blockquote><p>问题：<br>我们的内部样式表只能对一个网页起作用，<br>它里面的样式不能跨页面进行复用</p></blockquote><h3 id="第三种方式（外部样式表）最佳实践"><a href="#第三种方式（外部样式表）最佳实践" class="headerlink" title="第三种方式（外部样式表）最佳实践"></a>第三种方式（外部样式表）最佳实践</h3><p>可以将CSS样式编写到一个外部的CSS文件中，<br>然后通过link标签来引入外部的CSS文件</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>外部样式表需要通过link标签进行引入，<br>意味着只要想使用这些样式的网页都可以对其进行引用<br>使样式可以在的不同页面之间进行复用。</p><p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，<br>从而加快网页的加载速度，提高用户的体验。</p><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><p>style标签中属于CSS，而不是HTML</p><blockquote><!-- -->注释在CSS中无效<p>CSS中的注释为 &#x2F;* *&#x2F; (似曾相识)</p></blockquote><p>例：</p><pre class="line-numbers language-CSS" data-language="CSS"><code class="language-CSS">p&#123;    color: red;    font-size: 40px;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="选择器-x2F-声明块"><a href="#选择器-x2F-声明块" class="headerlink" title="选择器 &#x2F; 声明块"></a>选择器 &#x2F; 声明块</h3><h4 id="选择器（selectors）"><a href="#选择器（selectors）" class="headerlink" title="选择器（selectors）"></a>选择器（selectors）</h4><p>通过选择器可以选中页面中的指定元素<br>比如上述代码中的p的作用就是选中页面中所有的p元素</p><h4 id="声明块"><a href="#声明块" class="headerlink" title="声明块"></a>声明块</h4><p>通过声明块来指定要为元素设置的样式</p><p>声明块由一个一个的声明组成</p><p>声明是一个名值对结构<br>一个样式名对应一个样式(properties)值，名和值之间以:连接，以;结尾</p><h2 id="常用选择器"><a href="#常用选择器" class="headerlink" title="常用选择器"></a>常用选择器</h2><h3 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h3><p>作用：根据标签名来选中指定的元素<br>语法：标签名{}<br>例子：p{}  h1{}  div{}</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上代码将所有的段落设置为红色（字体）</p><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>作用：根据元素的id属性值选中一个元素<br>语法： #id属性值{}<br>例子：#box{}  #red{}</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#red</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;p id=<span class="token string">"red"</span>>儿童相见不相识&lt;/p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码只将“儿童相见不相识”段落设置为红色</p><p>注：id不能重复</p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>class是一个标签的属性，它和id类似，不同的是class可以重复使用<br>可以通过class属性来为元素分组</p><p>作用：根据元素的class属性值选中一组元素<br>语法：.class属性值</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.blue</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;p class=<span class="token string">"blue"</span>>落霞与孤鹜齐飞&lt;/p>&lt;p class=<span class="token string">"blue"</span>>秋水共长天一色&lt;/p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码将“落霞与孤鹜齐飞”和“秋水共长天一色”两个元素设置为蓝色</p><p>可以为一个元素指定多个class属性</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h3><p>作用：选中页面中的所有元素<br>语法： *</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上代码将所有元素设置为红色</p><h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h3><p>作用：选中同时符合多个条件的元素<br>语法：选择器1选择器2选择器3选择器n{}<br>注意点：<br>交集选择器中如果有元素选择器，必须使用元素选择器开头<br>(id一般不用)</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div.red</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 将class为red的div字体大小设置为30px */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="并集选择器（选择器分组）"><a href="#并集选择器（选择器分组）" class="headerlink" title="并集选择器（选择器分组）"></a>并集选择器（选择器分组）</h3><p>作用：同时选择多个选择器对应的元素<br>语法：选择器1，选择器2，选择器3，选择器n{}</p><h2 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="父元素"><a href="#父元素" class="headerlink" title="父元素"></a>父元素</h4><p>直接包含子元素的元素叫做父元素<del>（废话）</del></p><h4 id="子元素"><a href="#子元素" class="headerlink" title="子元素"></a>子元素</h4><p>直接被父元素包含的元素是子元素<del>（废话）</del></p><h4 id="祖先元素"><a href="#祖先元素" class="headerlink" title="祖先元素"></a>祖先元素</h4><p>直接或间接包含后代元素的元素叫做祖先元素<br>一个元素的父元素也是它的祖先元素</p><h4 id="后代元素"><a href="#后代元素" class="headerlink" title="后代元素"></a>后代元素</h4><p>直接或间接被祖先元素包含的元素叫做后代元素<br>子元素也是后代元素</p><h4 id="兄弟元素"><a href="#兄弟元素" class="headerlink" title="兄弟元素"></a>兄弟元素</h4><p>拥有相同父元素的元素是兄弟元素</p><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    我是一个div    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        我是div中的p元素        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是p元素中的span<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是div中的span元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h4><p>作用：选中指定父元素的指定子元素<br>语法：父元素 &gt; 子元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*为div的子元素span设置一个字体颜色红色(为div直接包含的span设置一个字体颜色)*/</span><span class="token selector">div > span</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*选中div中的p中的span元素（禁止套娃）*/</span><span class="token selector">div > p > span</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="后代元素选择器"><a href="#后代元素选择器" class="headerlink" title="后代元素选择器"></a>后代元素选择器</h4><p>作用：选中指定元素内的指定后代元素<br>语法：祖先 后代</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*选择div中的所有span元素*/</span><span class="token selector">div span</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h4><p>选择下一个兄弟（紧挨的元素）<br>语法：前一个 + 下一个</p><p>选择下面所有的兄弟<br>语法：兄 ~ 弟</p><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><p>[属性名] 选择含有指定属性的元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p[title]</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*以上代码将含有title属性的p元素设定为橙色*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>[属性名&#x3D;属性值] 选择含有指定属性和属性值的元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p[title=abc]</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[属性名^&#x3D;属性值] 选择属性值以指定值开头的元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p[title^=abc]</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[属性名$&#x3D;属性值] 选择属性值以指定值结尾的元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p[title$=abc]</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[属性名*&#x3D;属性值] 选择属性值中含有某值的元素的元素</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p[title*=abc]</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><h3 id="伪类（不存在的类，特殊的类）"><a href="#伪类（不存在的类，特殊的类）" class="headerlink" title="伪类（不存在的类，特殊的类）"></a>伪类（不存在的类，特殊的类）</h3><p>伪类用来描述一个元素的特殊状态<br>比如：第一个子元素、被点击的元素、鼠标移入的元素…</p><p>伪类一般情况下都是使用：开头</p><blockquote><p>:first-child 第一个子元素<br>:last-child 最后一个子元素<br>:nth-child() 选中第n个子元素</p><blockquote><p>特殊值：<br>n 第n个 n的范围0到正无穷<br>2n 或 even 表示选中偶数位的元素<br>2n+1 或 odd 表示选中奇数位的元素</p></blockquote><p>以上这些伪类都是根据所有的子元素进行排序</p></blockquote><blockquote><p>:first-of-type<br>:last-of-type<br>:nth-of-type()<br>这几个伪类的功能和上述的类似，不同点是他们在同类型元素中进行排序1</p></blockquote><blockquote><p>:not() 否定伪类<br>将符合条件的元素从选择器中去除</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">ul > li:not(:nth-of-type(3))</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="其他伪类"><a href="#其他伪类" class="headerlink" title="其他伪类"></a>其他伪类</h3><h4 id="link"><a href="#link" class="headerlink" title=":link"></a>:link</h4><p>用来表示没访问过的链接（正常的链接）</p><h4 id="visited"><a href="#visited" class="headerlink" title=":visited"></a>:visited</h4><p>用来表示访问过的链接<br>由于隐私的原因，所以visited这个伪类只能修改链接的颜色</p><h4 id="hover"><a href="#hover" class="headerlink" title=":hover"></a>:hover</h4><p>用来表示鼠标移入的状态</p><h4 id="active"><a href="#active" class="headerlink" title=":active"></a>:active</h4><p>用来表示鼠标点击的状态</p><h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><p>伪元素，表示页面中一些特殊的并不真实存在的元素（特殊的位置）</p><p>伪元素使用::开头</p><h4 id="first-letter"><a href="#first-letter" class="headerlink" title="::first-letter"></a>::first-letter</h4><p>表示第一个字母</p><h4 id="first-line"><a href="#first-line" class="headerlink" title="::first-line"></a>::first-line</h4><p>表示第一行</p><h4 id="selection"><a href="#selection" class="headerlink" title="::selection"></a>::selection</h4><p>表示选中的内容</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p::selection</span><span class="token punctuation">&#123;</span>    <span class="token property">backgroung-color</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="before"><a href="#before" class="headerlink" title="::before"></a>::before</h4><p>元素的开始位置</p><h4 id="after"><a href="#after" class="headerlink" title="::after"></a>::after</h4><p>元素的最后</p><blockquote><p>before 和 after 必须结合content属性来使用</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div::before</span><span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'abc'</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div::after</span><span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'haha'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="选择器练习（餐厅练习）"><a href="#选择器练习（餐厅练习）" class="headerlink" title="选择器练习（餐厅练习）"></a>选择器练习（餐厅练习）</h2><p><a href="https://flukeout.github.io/">CSS餐厅练习</a></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>样式的继承，我们为一个元素设置的样式同时也会应用到它的后代元素上。</p><p>继承是发生在祖先和后代之间的。</p><p>继承的设计是为了方便我们的开发，<br>利用继承我们可以见一些通用的样式统一设置到共同的祖先元素上，<br>这样只需设置一次即可让所有的元素都具有该样式。</p><blockquote><p><strong>注意：</strong>并不是所有的样式都会被继承：<br>比如 背景相关的，布局相关等的这些样式都不会继承。<br>具体情况查表（Inherited）（zeal）</p></blockquote><h2 id="选择器的权重（优先级）"><a href="#选择器的权重（优先级）" class="headerlink" title="选择器的权重（优先级）"></a>选择器的权重（优先级）</h2><p>样式的冲突：</p><blockquote><p>当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。</p></blockquote><p>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定</p><p>选择器的权重：</p><blockquote><ul><li>内联（行内）样式   1,0,0,0</li><li>id选择器                   0,1,0,0</li><li>类和伪类选择器       0,0,1,0</li><li>元素选择器               0,0,0,1</li><li>通配选择器               0,0,0,0</li><li>继承的样式               没有优先级</li></ul><p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（分组选择器时单独计算的），<br>选择器的累加不会超过其最大的数量级，类选择器再高也不会超过id选择器<br>如果优先级计算后相同，此时则优先使用靠下的样式（后面的覆盖前面的）</p><p>越具体，优先级越高</p><p>可以在某一个样式的后边添加  !important，则此时该样式会获取到最高的优先级，甚至超过内联样式<br>**注意:**在开发中要慎用</p></blockquote><p>角度刁钻的特例：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#box1</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div#box1</span><span class="token punctuation">&#123;</span>    <span class="token property">backgroung-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.red</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码最终的效果背景是黄色</p><blockquote><p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示</p></blockquote><p>另一个例子：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div,p,span</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>此时三种选择器单独计算，不会加到一起（分组选择器）</p></blockquote><h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h2><h3 id="长度单位"><a href="#长度单位" class="headerlink" title="长度单位"></a>长度单位</h3><h4 id="像素"><a href="#像素" class="headerlink" title="像素"></a>像素</h4><p>屏幕（显示器）实际上是由一个一个的小点点构成的<br>不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰<br>所以同样的200px在不同的设备下显示效果不一样</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box1</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="百分比"><a href="#百分比" class="headerlink" title="百分比"></a>百分比</h4><p>也可以将属性值设置为相对于其父元素属性的百分比<br>设置百分比可以使子元素跟随父元素的改变而改变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box2</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="em"><a href="#em" class="headerlink" title="em"></a>em</h4><p>em是相对于元素的字体大小来计算的<br>1em &#x3D; 1font-size</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box3</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10em<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10em<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="rem-r-root"><a href="#rem-r-root" class="headerlink" title="rem (r : root)"></a>rem (r : root)</h4><p>rem是相对于根元素的字体大小来计算</p><h3 id="颜色单位"><a href="#颜色单位" class="headerlink" title="颜色单位"></a>颜色单位</h3><p>在CSS中可以直接使用颜色名来设置各种颜色<br>比如： red、orange、yellow、blue、green……<br>但是在CSS中直接使用颜色名是非常的不方便</p><h4 id="RGB值"><a href="#RGB值" class="headerlink" title="RGB值"></a>RGB值</h4><p>RGB通过三种颜色的不同浓度来调配出不同的颜色<br>R red，G green，B blue<br>每一种颜色的范围在0 - 255 (0% - 100%) 之间<br>语法：RGB(红色，绿色，蓝色)</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="RGBA"><a href="#RGBA" class="headerlink" title="RGBA"></a>RGBA</h4><p>就是在rgb的基础上增加了一个a表示不透明度<br>需要四个值，前三个和rgb一样，第四个表示不透明度<br>    1表示完全不透明   0表示完全透明  .5半透明</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>106<span class="token punctuation">,</span>153<span class="token punctuation">,</span>85<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>106<span class="token punctuation">,</span>153<span class="token punctuation">,</span>85<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="十六进制的RGB值"><a href="#十六进制的RGB值" class="headerlink" title="十六进制的RGB值"></a>十六进制的RGB值</h4><p>语法：#红色绿色蓝色<br>颜色浓度通过 00-ff<br>如果颜色两位两位重复可以进行简写</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #ffff00<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #ff0<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #bbffaa<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="HSL值（HSLA值）"><a href="#HSL值（HSLA值）" class="headerlink" title="HSL值（HSLA值）"></a>HSL值（HSLA值）</h4><p>H 色相（0 - 360）<br>S 饱和度，颜色的浓度 (0% - 100%)<br>L 亮度 ，颜色的浓度 (0% - 100%)</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">hsl</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span> 100%<span class="token punctuation">,</span> 50%<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="原课程链接"><a href="#原课程链接" class="headerlink" title="原课程链接"></a>原课程链接</h2><p><a href="https://www.bilibili.com/video/BV1XJ411X7Ud">课程链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/2022/06/29/liu-yan-ban/"/>
      <url>/2022/06/29/liu-yan-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h1><p>可以在这里留言评论。😉</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初中数学笔记</title>
      <link href="/2022/06/29/chu-zhong-shu-xue-bi-ji/"/>
      <url>/2022/06/29/chu-zhong-shu-xue-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>初中记的数学笔记，现在发出来（虽然现在用不到了）</p><h2 id="因式分解公式"><a href="#因式分解公式" class="headerlink" title="因式分解公式"></a>因式分解公式</h2><p><img src="https://s2.loli.net/2022/06/29/uHwhp5JaTXrtRMq.png" alt="因式分解公式"></p><h2 id="圆幂定理"><a href="#圆幂定理" class="headerlink" title="圆幂定理"></a>圆幂定理</h2><p><img src="https://s2.loli.net/2022/06/29/ZDC8QxEl1GU3wk4.png" alt="圆幂定理"></p><h2 id="塞瓦定理"><a href="#塞瓦定理" class="headerlink" title="塞瓦定理"></a>塞瓦定理</h2><p><img src="https://s2.loli.net/2022/06/29/zmNbFB7kwOWioY3.png" alt="塞瓦定理"></p><h2 id="正弦定理和余弦定理"><a href="#正弦定理和余弦定理" class="headerlink" title="正弦定理和余弦定理"></a>正弦定理和余弦定理</h2><p><img src="https://s2.loli.net/2022/06/29/ytLUwrDCPI7sfu3.png" alt="正弦定理和余弦定理"></p><h2 id="托勒密定理"><a href="#托勒密定理" class="headerlink" title="托勒密定理"></a>托勒密定理</h2><p><img src="https://s2.loli.net/2022/06/29/7dWICT3FOewRZfm.png" alt="托勒密定理"></p><h2 id="托勒密不等式"><a href="#托勒密不等式" class="headerlink" title="托勒密不等式"></a>托勒密不等式</h2><p><img src="https://s2.loli.net/2022/06/29/qwgWOQKISXVJ7M6.png" alt="托勒密不等式"></p><h2 id="三角形的五心"><a href="#三角形的五心" class="headerlink" title="三角形的五心"></a>三角形的五心</h2><p><img src="https://s2.loli.net/2022/06/29/XYFkIpq5SeL9KjE.png" alt="三角形的五心"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
